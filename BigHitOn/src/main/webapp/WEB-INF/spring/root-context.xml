<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- 파일 업로드 -->
	<bean name="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
		<property name="maxUploadSize" value="10000000"></property> 
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="maxInMemorySize" value="52428800"/>
	</bean>


	<!-- dao mapper에 sql을 실행 class -->
	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg index="0" ref="sqlSessionFactoryBean"></constructor-arg>
	</bean>

	<!-- mybatis config -->
	<bean id="sqlSessionFactoryBean"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
		<property name="mapperLocations"
			value="classpath:mappers/**/*.xml" />
		<property name="dataSource" ref="datasource"></property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="datasource" />
	</bean>

	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="datasource" />
	</bean>
	
	<!-- PasswordAuthentication -->
   <bean id="passwordAuth" class="javax.mail.PasswordAuthentication">
   	  <constructor-arg index="0">
   	  	<value>gustn4880@naver.com</value>
   	  </constructor-arg>
   	  <constructor-arg index="1">
   	  	<value>비번</value>
   	  </constructor-arg>
   </bean>
   
   <!-- Authenticator -->
   <bean id="authenticator" class="javax.mail.Authenticator">
   	  <lookup-method name="getPasswordAuthentication"
   	    bean="passwordAuth"
   	    />
   </bean>
   
   <!-- Session -->
   <bean id="emailSession" class="javax.mail.Session">
   		<constructor-arg index="0">
   			<props>
   				<prop key="mail.smtp.host">smtp.naver.com</prop>
   				<prop key="mail.smtp.port">465</prop>
   				<prop key="mail.smtp.auth">true</prop>
   				<prop key="mail.smtp.ssl.enable">true</prop>
   				<prop key="mail.smtp.ssl.trust">smtp.naver.com</prop>
   			</props>
   		</constructor-arg>
   		<constructor-arg index="1" ref="authenticator"/>
   </bean>
	
	<!-- JavaMailSenderImpl:운영(Mail보내기) -->
    <bean id="mailSenderImpl" class="org.springframework.mail.javamail.JavaMailSenderImpl">
   		<property name="session" ref="emailSession"></property>
    </bean>
	
	<!--database.properties파일 read -->
	<context:property-placeholder
		location="classpath:resources/config/database.properties" />

	<bean id="datasource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 최대 접속 허용 개수 -->
		<property name="maxActive" value="10" />
		<!-- 여분으로 남겨질 Connection -->
		<property name="maxIdle" value="8" />
		<!-- DB연결이 반환되는 Timeout =-1(무한대기) -->
		<property name="maxWait" value="50000" />
		<!-- Connection이 잘못관리되어 버려진 연결을 찾아 재활용 여부 -->
		<property name="removeAbandoned" value="true" />
		<!-- 버려진 연결로 인식할 기본 시간(초) -->
		<property name="removeAbandonedTimeout" value="60" />

	</bean>
</beans>
